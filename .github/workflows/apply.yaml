name: apply

on:
  repository_dispatch:
    types: [apply-command]

jobs:

  deploy:
    name: Process command
    runs-on: ubuntu-latest
    env:
      TF_VERSION: 0.12.26
      BASE_REF: ${{ github.event.client_payload.pull_request.base.ref }}
      HEAD_SHA: ${{ github.event.client_payload.pull_request.head.sha }}

    steps:

      - name: Pull code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ env.HEAD_SHA }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.1.0
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # - name: Unlock secrets
      #   uses: sliteteam/github-action-git-crypt-unlock@1.0.2
      #   env:
      #     GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}

      - name: Parse parameters
        run: |
          if [$(echo ${BASE_REF} | cut -d'/' -f1) != 'env'] then
            echo "This is not an environment branch"
            exit 1
          fi

          echo ::set-env name=PLATFORM::   $(echo ${BASE_REF} | cut -d'/' -f2)
          echo ::set-env name=ENVIRONMENT::$(echo ${BASE_REF} | cut -d'/' -f3)
          echo ::set-env name=REGION::     $(echo ${BASE_REF} | cut -d'/' -f4)

      - name: tf apply (${{ env.BASE_REF }}) zookeeper
        run: |
          echo make apply platform=${PLATFORM} environment=${ENVIRONMENT} region=${REGION} stack=zookeeper

      - name: tf apply (${{ env.BASE_REF }}) cassandra
        run: |
          echo make apply platform=${PLATFORM} environment=${ENVIRONMENT} region=${REGION} stack=cassandra

      - name: tf apply (${{ env.BASE_REF }}) kafka
        run: |
          echo make apply platform=${PLATFORM} environment=${ENVIRONMENT} region=${REGION} stack=kafka

      - name: tf apply (${{ env.BASE_REF }}) storm
        run: |
          echo make apply platform=${PLATFORM} environment=${ENVIRONMENT} region=${REGION} stack=storm

      - name: tf apply (${{ env.BASE_REF }}) efid
        run: |
          echo make apply platform=${PLATFORM} environment=${ENVIRONMENT} region=${REGION} stack=efid

      - name: tf apply (${{ env.BASE_REF }}) school
        run: |
          echo make apply platform=${PLATFORM} environment=${ENVIRONMENT} region=${REGION} stack=school

      - name: Confirm success
        if: success()
        uses: peter-evans/create-or-update-comment@v1.4.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reaction-type: rocket

      - name: Confirm failure
        if: failure()
        uses: peter-evans/create-or-update-comment@v1.4.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reaction-type: -1
          body: |
            > Failed to deploy, please check the logs [here][1]

            [1]: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}